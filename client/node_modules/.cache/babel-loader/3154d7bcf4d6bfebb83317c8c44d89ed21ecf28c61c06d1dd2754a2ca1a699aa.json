{"ast":null,"code":"var _jsxFileName = \"/home/carruc/repos/eva-frontend/client/src/components/TaskLists.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport React, { useState, useMemo } from 'react';\nimport { Plus, Check, ChevronDown, ChevronRight, EyeOff, Edit, Trash2, X } from 'lucide-react';\nimport { dataUtils } from '../services/api';\nimport TaskModal from './TaskModal';\nimport './TaskLists.css';\n\n// Implements requirements R16, D9-D12\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TaskLists = ({\n  projects,\n  tasks,\n  events,\n  onTaskCreate,\n  onTaskUpdate,\n  onTaskDelete,\n  onTaskToggle,\n  onProjectUpdate,\n  onProjectEdit,\n  onProjectDelete\n}) => {\n  _s();\n  const [hiddenProjects, setHiddenProjects] = useState(new Set());\n  const [expandedProjects, setExpandedProjects] = useState(new Set());\n  const [showTaskModal, setShowTaskModal] = useState(false);\n  const [selectedProject, setSelectedProject] = useState(null);\n  const [editingTask, setEditingTask] = useState(null);\n  const [creatingTaskForProject, setCreatingTaskForProject] = useState(null);\n\n  // Sort projects and filter visible ones\n  const visibleProjects = useMemo(() => {\n    return dataUtils.sortProjects(projects).filter(p => !hiddenProjects.has(p.id));\n  }, [projects, hiddenProjects]);\n  const hiddenProjectsList = useMemo(() => {\n    return projects.filter(p => hiddenProjects.has(p.id));\n  }, [projects, hiddenProjects]);\n\n  // Toggle project visibility - Implements D12\n  const handleToggleHidden = projectId => {\n    setHiddenProjects(prev => {\n      const newSet = new Set(prev);\n\n      // If we're trying to show a hidden project, check the 6-project limit\n      if (newSet.has(projectId)) {\n        // This project is currently hidden, check if we can show it\n        const currentlyVisible = projects.filter(p => !newSet.has(p.id));\n        if (currentlyVisible.length >= 6) {\n          alert('You can only have 6 visible projects at a time. Please hide another project first.');\n          return prev; // Return the previous state unchanged\n        }\n        newSet.delete(projectId);\n      } else {\n        newSet.add(projectId);\n      }\n      return newSet;\n    });\n  };\n\n  // Toggle project expansion - Implements D10\n  const handleToggleExpanded = projectId => {\n    setExpandedProjects(prev => {\n      const newSet = new Set(prev);\n      if (newSet.has(projectId)) {\n        newSet.delete(projectId);\n      } else {\n        newSet.add(projectId);\n      }\n      return newSet;\n    });\n  };\n\n  // Handle task creation - Implements D9, D11 (now inline)\n  const handleCreateTask = projectId => {\n    setCreatingTaskForProject(projectId);\n  };\n\n  // Handle task editing (still uses modal)\n  const handleEditTask = task => {\n    setEditingTask(task);\n    setSelectedProject(projects.find(p => p.id === task.projectId));\n    setShowTaskModal(true);\n  };\n\n  // Handle inline task creation save\n  const handleInlineTaskSave = async taskData => {\n    try {\n      await onTaskCreate(taskData);\n      setCreatingTaskForProject(null);\n    } catch (error) {\n      console.error('Error creating task:', error);\n    }\n  };\n\n  // Handle inline task creation cancel\n  const handleInlineTaskCancel = () => {\n    setCreatingTaskForProject(null);\n  };\n\n  // Handle task modal save (for editing)\n  const handleTaskModalSave = async taskData => {\n    try {\n      if (editingTask) {\n        await onTaskUpdate(editingTask.id, taskData);\n      }\n      setShowTaskModal(false);\n      setSelectedProject(null);\n      setEditingTask(null);\n    } catch (error) {\n      console.error('Error saving task:', error);\n    }\n  };\n\n  // Handle task modal close\n  const handleTaskModalClose = () => {\n    setShowTaskModal(false);\n    setSelectedProject(null);\n    setEditingTask(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task-lists\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-lists-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"project-cards-grid\",\n        children: visibleProjects.map(project => /*#__PURE__*/_jsxDEV(ProjectTaskCard, {\n          project: project,\n          tasks: dataUtils.getProjectTasks(tasks, project.id),\n          events: dataUtils.getProjectEvents(events, project.id),\n          isExpanded: expandedProjects.has(project.id),\n          isCreatingTask: creatingTaskForProject === project.id,\n          onToggleExpanded: () => handleToggleExpanded(project.id),\n          onToggleHidden: () => handleToggleHidden(project.id),\n          onCreateTask: () => handleCreateTask(project.id),\n          onEditTask: handleEditTask,\n          onTaskToggle: onTaskToggle,\n          onTaskDelete: onTaskDelete,\n          onProjectEdit: () => onProjectEdit(project),\n          onProjectDelete: () => onProjectDelete(project.id),\n          onInlineTaskSave: handleInlineTaskSave,\n          onInlineTaskCancel: handleInlineTaskCancel\n        }, project.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), hiddenProjectsList.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"hidden-projects-sidebar\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sidebar-header\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-muted\",\n            children: \"Hidden projects:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sidebar-content\",\n          children: hiddenProjectsList.map(project => /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"hidden-project-item\",\n            onClick: () => handleToggleHidden(project.id),\n            style: {\n              borderLeftColor: project.color\n            },\n            title: `Show ${project.name}`,\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"project-name-truncated\",\n              children: project.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 19\n            }, this)\n          }, project.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), showTaskModal && selectedProject && editingTask && /*#__PURE__*/_jsxDEV(TaskModal, {\n      task: editingTask,\n      project: selectedProject,\n      events: dataUtils.getProjectEvents(events, selectedProject.id),\n      onSave: handleTaskModalSave,\n      onClose: handleTaskModalClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 5\n  }, this);\n};\n\n// Individual project task card component - Implements D9-D11\n_s(TaskLists, \"V2BaBD4Vs6Ahpg18ny7HXOhITo0=\");\n_c = TaskLists;\nconst ProjectTaskCard = ({\n  project,\n  tasks,\n  events,\n  isExpanded,\n  isCreatingTask,\n  onToggleExpanded,\n  onToggleHidden,\n  onCreateTask,\n  onEditTask,\n  onTaskToggle,\n  onTaskDelete,\n  onProjectEdit,\n  onProjectDelete,\n  onInlineTaskSave,\n  onInlineTaskCancel\n}) => {\n  // Separate completed and uncompleted tasks\n  const uncompletedTasks = tasks.filter(t => !t.completed);\n  const completedTasks = tasks.filter(t => t.completed);\n  const totalTasks = tasks.length;\n  const completedCount = completedTasks.length;\n  const progressPercentage = totalTasks > 0 ? completedCount / totalTasks * 100 : 0;\n\n  // Get task with event info\n  const getTaskWithEvent = task => {\n    const event = task.eventId ? events.find(e => e.id === task.eventId) : null;\n    return {\n      ...task,\n      event\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"project-task-card\",\n    style: {\n      borderTopColor: project.color\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"project-card-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"project-card-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"project-card-title\",\n            style: {\n              color: project.color\n            },\n            children: project.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"project-card-stats\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"tasks-count\",\n              children: [completedCount, \"/\", totalTasks, \" tasks completed\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 15\n            }, this), events.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"events-count text-muted\",\n              children: [events.length, \" event\", events.length !== 1 ? 's' : '']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"project-card-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-ghost btn-sm\",\n            onClick: onToggleExpanded,\n            title: isExpanded ? \"Show only incomplete tasks\" : \"Show all tasks\",\n            children: isExpanded ? /*#__PURE__*/_jsxDEV(ChevronDown, {\n              size: 16\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 29\n            }, this) : /*#__PURE__*/_jsxDEV(ChevronRight, {\n              size: 16\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 57\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-ghost btn-sm\",\n            onClick: onToggleHidden,\n            title: \"Hide this task list\",\n            children: /*#__PURE__*/_jsxDEV(X, {\n              size: 16\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-bar\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-fill\",\n            style: {\n              width: `${progressPercentage}%`,\n              backgroundColor: project.color\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"progress-text\",\n          children: [Math.round(progressPercentage), \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-section\",\n        children: [uncompletedTasks.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"task-list\",\n          children: uncompletedTasks.map(task => /*#__PURE__*/_jsxDEV(TaskItem, {\n            task: getTaskWithEvent(task),\n            onToggle: () => onTaskToggle(task.id),\n            onEdit: () => onEditTask(task),\n            onDelete: () => onTaskDelete(task.id)\n          }, task.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"empty-state\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-muted\",\n            children: \"No pending tasks\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 287,\n          columnNumber: 13\n        }, this), isCreatingTask && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"task-list\",\n          children: /*#__PURE__*/_jsxDEV(InlineTaskCreator, {\n            project: project,\n            events: events,\n            onSave: onInlineTaskSave,\n            onCancel: onInlineTaskCancel\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 9\n      }, this), isExpanded && completedTasks.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-section completed-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section-divider\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-muted\",\n            children: \"Completed Tasks\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"task-list\",\n          children: completedTasks.map(task => /*#__PURE__*/_jsxDEV(TaskItem, {\n            task: getTaskWithEvent(task),\n            onToggle: () => onTaskToggle(task.id),\n            onEdit: () => onEditTask(task),\n            onDelete: () => onTaskDelete(task.id)\n          }, task.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-footer\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-primary btn-pill add-task-btn\",\n        onClick: onCreateTask,\n        children: [/*#__PURE__*/_jsxDEV(Plus, {\n          size: 16\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 11\n        }, this), \"Add Task\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-hover-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-ghost btn-sm\",\n          onClick: onProjectEdit,\n          title: \"Edit project\",\n          children: /*#__PURE__*/_jsxDEV(Edit, {\n            size: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-ghost btn-sm\",\n          onClick: () => {\n            if (window.confirm('Are you sure you want to delete this project? All associated tasks and events will be removed.')) {\n              onProjectDelete();\n            }\n          },\n          title: \"Delete project\",\n          children: /*#__PURE__*/_jsxDEV(Trash2, {\n            size: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 214,\n    columnNumber: 5\n  }, this);\n};\n\n// Individual task item component - Implements R13.1, R13.2\n_c2 = ProjectTaskCard;\nconst TaskItem = ({\n  task,\n  onToggle,\n  onEdit,\n  onDelete\n}) => {\n  _s2();\n  const [showActions, setShowActions] = useState(false);\n  const handleToggle = e => {\n    e.stopPropagation();\n    onToggle();\n  };\n  const handleEdit = e => {\n    e.stopPropagation();\n    onEdit();\n    setShowActions(false);\n  };\n  const handleDelete = e => {\n    e.stopPropagation();\n    if (window.confirm('Are you sure you want to delete this task?')) {\n      onDelete();\n    }\n    setShowActions(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `task-item ${task.completed ? 'completed' : ''}`,\n    onClick: () => setShowActions(!showActions),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-main\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"task-checkbox\",\n        onClick: handleToggle,\n        title: task.completed ? \"Mark as incomplete\" : \"Mark as complete\",\n        children: task.completed ? /*#__PURE__*/_jsxDEV(Check, {\n          size: 14,\n          className: \"check-icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"checkbox-empty\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: `task-name ${task.completed ? 'completed-text' : ''}`,\n          children: task.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 11\n        }, this), task.event && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: `task-event-badge ${task.event.type}`,\n          children: task.event.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 408,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-actions\",\n        children: showActions && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-ghost btn-sm\",\n            onClick: handleEdit,\n            title: \"Edit task\",\n            children: /*#__PURE__*/_jsxDEV(Edit, {\n              size: 12\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 422,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 417,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-ghost btn-sm\",\n            onClick: handleDelete,\n            title: \"Delete task\",\n            children: /*#__PURE__*/_jsxDEV(Trash2, {\n              size: 12\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 429,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 424,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 386,\n    columnNumber: 5\n  }, this);\n};\n\n// Inline task creator component for creating tasks directly in the list\n_s2(TaskItem, \"9EzFePNaqmNh8mYL6UPNi0UvsSQ=\");\n_c3 = TaskItem;\nconst InlineTaskCreator = ({\n  project,\n  events,\n  onSave,\n  onCancel\n}) => {\n  _s3();\n  const [taskName, setTaskName] = useState('');\n  const [eventId, setEventId] = useState('');\n  const handleSubmit = () => {\n    if (taskName.trim()) {\n      const taskData = {\n        name: taskName.trim(),\n        projectId: project.id\n      };\n      if (eventId) {\n        taskData.eventId = eventId;\n      }\n      onSave(taskData);\n    }\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter') {\n      e.preventDefault();\n      handleSubmit();\n    } else if (e.key === 'Escape') {\n      onCancel();\n    }\n  };\n  const handleCancel = () => {\n    onCancel();\n  };\n  const handleEventSelect = selectedEventId => {\n    setEventId(selectedEventId === eventId ? '' : selectedEventId);\n  };\n\n  // Sort events by date for better UX\n  const sortedEvents = [...events].sort((a, b) => new Date(a.date) - new Date(b.date));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"inline-task-creator\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-creator-main\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-checkbox-placeholder\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"checkbox-empty\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 483,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 482,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-creator-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"task-creator-input\",\n          placeholder: \"Enter task description...\",\n          value: taskName,\n          onChange: e => setTaskName(e.target.value),\n          onKeyDown: handleKeyPress,\n          autoFocus: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 487,\n          columnNumber: 11\n        }, this), sortedEvents.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"task-creator-events\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"events-list\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: `event-option ${eventId === '' ? 'selected' : ''}`,\n              onClick: () => setEventId(''),\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"event-radio\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `radio-indicator ${eventId === '' ? 'active' : ''}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 505,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 504,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"event-name\",\n                children: \"No specific event\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 507,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 500,\n              columnNumber: 17\n            }, this), sortedEvents.map(event => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `event-option ${eventId === event.id ? 'selected' : ''}`,\n              onClick: () => handleEventSelect(event.id),\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"event-radio\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `radio-indicator ${eventId === event.id ? 'active' : ''}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 517,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 516,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"event-info\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"event-name\",\n                  children: event.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 520,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: `event-type-badge ${event.type}`,\n                  children: event.type\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 521,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"event-date\",\n                  children: new Date(event.date).toLocaleDateString()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 524,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 519,\n                columnNumber: 21\n              }, this)]\n            }, event.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 511,\n              columnNumber: 19\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 499,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 498,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 486,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-creator-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-accent btn-sm task-creator-ok\",\n          onClick: handleSubmit,\n          disabled: !taskName.trim(),\n          title: \"Save task (Enter)\",\n          children: /*#__PURE__*/_jsxDEV(Check, {\n            size: 14\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 542,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 536,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-ghost btn-sm\",\n          onClick: handleCancel,\n          title: \"Cancel (Escape)\",\n          children: /*#__PURE__*/_jsxDEV(X, {\n            size: 14\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 549,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 544,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 535,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 481,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 480,\n    columnNumber: 5\n  }, this);\n};\n_s3(InlineTaskCreator, \"I8ZdLulNMsc52U2qsC6u7M7dETY=\");\n_c4 = InlineTaskCreator;\nexport default TaskLists;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"TaskLists\");\n$RefreshReg$(_c2, \"ProjectTaskCard\");\n$RefreshReg$(_c3, \"TaskItem\");\n$RefreshReg$(_c4, \"InlineTaskCreator\");","map":{"version":3,"names":["React","useState","useMemo","Plus","Check","ChevronDown","ChevronRight","EyeOff","Edit","Trash2","X","dataUtils","TaskModal","jsxDEV","_jsxDEV","Fragment","_Fragment","TaskLists","projects","tasks","events","onTaskCreate","onTaskUpdate","onTaskDelete","onTaskToggle","onProjectUpdate","onProjectEdit","onProjectDelete","_s","hiddenProjects","setHiddenProjects","Set","expandedProjects","setExpandedProjects","showTaskModal","setShowTaskModal","selectedProject","setSelectedProject","editingTask","setEditingTask","creatingTaskForProject","setCreatingTaskForProject","visibleProjects","sortProjects","filter","p","has","id","hiddenProjectsList","handleToggleHidden","projectId","prev","newSet","currentlyVisible","length","alert","delete","add","handleToggleExpanded","handleCreateTask","handleEditTask","task","find","handleInlineTaskSave","taskData","error","console","handleInlineTaskCancel","handleTaskModalSave","handleTaskModalClose","className","children","map","project","ProjectTaskCard","getProjectTasks","getProjectEvents","isExpanded","isCreatingTask","onToggleExpanded","onToggleHidden","onCreateTask","onEditTask","onInlineTaskSave","onInlineTaskCancel","fileName","_jsxFileName","lineNumber","columnNumber","onClick","style","borderLeftColor","color","title","name","onSave","onClose","_c","uncompletedTasks","t","completed","completedTasks","totalTasks","completedCount","progressPercentage","getTaskWithEvent","event","eventId","e","borderTopColor","size","width","backgroundColor","Math","round","TaskItem","onToggle","onEdit","onDelete","InlineTaskCreator","onCancel","window","confirm","_c2","_s2","showActions","setShowActions","handleToggle","stopPropagation","handleEdit","handleDelete","type","_c3","_s3","taskName","setTaskName","setEventId","handleSubmit","trim","handleKeyPress","key","preventDefault","handleCancel","handleEventSelect","selectedEventId","sortedEvents","sort","a","b","Date","date","placeholder","value","onChange","target","onKeyDown","autoFocus","toLocaleDateString","disabled","_c4","$RefreshReg$"],"sources":["/home/carruc/repos/eva-frontend/client/src/components/TaskLists.js"],"sourcesContent":["import React, { useState, useMemo } from 'react';\nimport { Plus, Check, ChevronDown, ChevronRight, EyeOff, Edit, Trash2, X } from 'lucide-react';\nimport { dataUtils } from '../services/api';\nimport TaskModal from './TaskModal';\nimport './TaskLists.css';\n\n// Implements requirements R16, D9-D12\nconst TaskLists = ({\n  projects,\n  tasks,\n  events,\n  onTaskCreate,\n  onTaskUpdate,\n  onTaskDelete,\n  onTaskToggle,\n  onProjectUpdate,\n  onProjectEdit,\n  onProjectDelete\n}) => {\n  const [hiddenProjects, setHiddenProjects] = useState(new Set());\n  const [expandedProjects, setExpandedProjects] = useState(new Set());\n  const [showTaskModal, setShowTaskModal] = useState(false);\n  const [selectedProject, setSelectedProject] = useState(null);\n  const [editingTask, setEditingTask] = useState(null);\n  const [creatingTaskForProject, setCreatingTaskForProject] = useState(null);\n\n  // Sort projects and filter visible ones\n  const visibleProjects = useMemo(() => {\n    return dataUtils.sortProjects(projects).filter(p => !hiddenProjects.has(p.id));\n  }, [projects, hiddenProjects]);\n\n  const hiddenProjectsList = useMemo(() => {\n    return projects.filter(p => hiddenProjects.has(p.id));\n  }, [projects, hiddenProjects]);\n\n  // Toggle project visibility - Implements D12\n  const handleToggleHidden = (projectId) => {\n    setHiddenProjects(prev => {\n      const newSet = new Set(prev);\n      \n      // If we're trying to show a hidden project, check the 6-project limit\n      if (newSet.has(projectId)) {\n        // This project is currently hidden, check if we can show it\n        const currentlyVisible = projects.filter(p => !newSet.has(p.id));\n        if (currentlyVisible.length >= 6) {\n          alert('You can only have 6 visible projects at a time. Please hide another project first.');\n          return prev; // Return the previous state unchanged\n        }\n        newSet.delete(projectId);\n      } else {\n        newSet.add(projectId);\n      }\n      \n      return newSet;\n    });\n  };\n\n  // Toggle project expansion - Implements D10\n  const handleToggleExpanded = (projectId) => {\n    setExpandedProjects(prev => {\n      const newSet = new Set(prev);\n      if (newSet.has(projectId)) {\n        newSet.delete(projectId);\n      } else {\n        newSet.add(projectId);\n      }\n      return newSet;\n    });\n  };\n\n  // Handle task creation - Implements D9, D11 (now inline)\n  const handleCreateTask = (projectId) => {\n    setCreatingTaskForProject(projectId);\n  };\n\n  // Handle task editing (still uses modal)\n  const handleEditTask = (task) => {\n    setEditingTask(task);\n    setSelectedProject(projects.find(p => p.id === task.projectId));\n    setShowTaskModal(true);\n  };\n\n  // Handle inline task creation save\n  const handleInlineTaskSave = async (taskData) => {\n    try {\n      await onTaskCreate(taskData);\n      setCreatingTaskForProject(null);\n    } catch (error) {\n      console.error('Error creating task:', error);\n    }\n  };\n\n  // Handle inline task creation cancel\n  const handleInlineTaskCancel = () => {\n    setCreatingTaskForProject(null);\n  };\n\n  // Handle task modal save (for editing)\n  const handleTaskModalSave = async (taskData) => {\n    try {\n      if (editingTask) {\n        await onTaskUpdate(editingTask.id, taskData);\n      }\n      setShowTaskModal(false);\n      setSelectedProject(null);\n      setEditingTask(null);\n    } catch (error) {\n      console.error('Error saving task:', error);\n    }\n  };\n\n  // Handle task modal close\n  const handleTaskModalClose = () => {\n    setShowTaskModal(false);\n    setSelectedProject(null);\n    setEditingTask(null);\n  };\n\n  return (\n    <div className=\"task-lists\">\n      <div className=\"task-lists-container\">\n        <div className=\"project-cards-grid\">\n          {visibleProjects.map(project => (\n            <ProjectTaskCard\n              key={project.id}\n              project={project}\n              tasks={dataUtils.getProjectTasks(tasks, project.id)}\n              events={dataUtils.getProjectEvents(events, project.id)}\n              isExpanded={expandedProjects.has(project.id)}\n              isCreatingTask={creatingTaskForProject === project.id}\n              onToggleExpanded={() => handleToggleExpanded(project.id)}\n              onToggleHidden={() => handleToggleHidden(project.id)}\n              onCreateTask={() => handleCreateTask(project.id)}\n              onEditTask={handleEditTask}\n              onTaskToggle={onTaskToggle}\n              onTaskDelete={onTaskDelete}\n              onProjectEdit={() => onProjectEdit(project)}\n              onProjectDelete={() => onProjectDelete(project.id)}\n              onInlineTaskSave={handleInlineTaskSave}\n              onInlineTaskCancel={handleInlineTaskCancel}\n            />\n          ))}\n        </div>\n\n        {/* Vertical hidden projects sidebar */}\n        {hiddenProjectsList.length > 0 && (\n          <div className=\"hidden-projects-sidebar\">\n            <div className=\"sidebar-header\">\n              <span className=\"text-muted\">Hidden projects:</span>\n            </div>\n            <div className=\"sidebar-content\">\n              {hiddenProjectsList.map(project => (\n                <button\n                  key={project.id}\n                  className=\"hidden-project-item\"\n                  onClick={() => handleToggleHidden(project.id)}\n                  style={{ borderLeftColor: project.color }}\n                  title={`Show ${project.name}`}\n                >\n                  <span className=\"project-name-truncated\">{project.name}</span>\n                </button>\n              ))}\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* Task editing modal (only for editing existing tasks) */}\n      {showTaskModal && selectedProject && editingTask && (\n        <TaskModal\n          task={editingTask}\n          project={selectedProject}\n          events={dataUtils.getProjectEvents(events, selectedProject.id)}\n          onSave={handleTaskModalSave}\n          onClose={handleTaskModalClose}\n        />\n      )}\n    </div>\n  );\n};\n\n// Individual project task card component - Implements D9-D11\nconst ProjectTaskCard = ({\n  project,\n  tasks,\n  events,\n  isExpanded,\n  isCreatingTask,\n  onToggleExpanded,\n  onToggleHidden,\n  onCreateTask,\n  onEditTask,\n  onTaskToggle,\n  onTaskDelete,\n  onProjectEdit,\n  onProjectDelete,\n  onInlineTaskSave,\n  onInlineTaskCancel\n}) => {\n  // Separate completed and uncompleted tasks\n  const uncompletedTasks = tasks.filter(t => !t.completed);\n  const completedTasks = tasks.filter(t => t.completed);\n  const totalTasks = tasks.length;\n  const completedCount = completedTasks.length;\n  const progressPercentage = totalTasks > 0 ? (completedCount / totalTasks) * 100 : 0;\n\n  // Get task with event info\n  const getTaskWithEvent = (task) => {\n    const event = task.eventId ? events.find(e => e.id === task.eventId) : null;\n    return { ...task, event };\n  };\n\n  return (\n    <div className=\"project-task-card\" style={{ borderTopColor: project.color }}>\n      {/* Card header */}\n      <div className=\"card-header\">\n        <div className=\"project-card-header\">\n          <div className=\"project-card-info\">\n            <h3 className=\"project-card-title\" style={{ color: project.color }}>\n              {project.name}\n            </h3>\n            <div className=\"project-card-stats\">\n              <span className=\"tasks-count\">\n                {completedCount}/{totalTasks} tasks completed\n              </span>\n              {events.length > 0 && (\n                <span className=\"events-count text-muted\">\n                  {events.length} event{events.length !== 1 ? 's' : ''}\n                </span>\n              )}\n            </div>\n          </div>\n          \n          {/* Only hide button in upper right corner */}\n          <div className=\"project-card-actions\">\n            <button\n              className=\"btn btn-ghost btn-sm\"\n              onClick={onToggleExpanded}\n              title={isExpanded ? \"Show only incomplete tasks\" : \"Show all tasks\"}\n            >\n              {isExpanded ? <ChevronDown size={16} /> : <ChevronRight size={16} />}\n            </button>\n            <button\n              className=\"btn btn-ghost btn-sm\"\n              onClick={onToggleHidden}\n              title=\"Hide this task list\"\n            >\n              <X size={16} />\n            </button>\n          </div>\n        </div>\n\n        {/* Progress bar */}\n        <div className=\"progress-container\">\n          <div className=\"progress-bar\">\n            <div \n              className=\"progress-fill\"\n              style={{ \n                width: `${progressPercentage}%`,\n                backgroundColor: project.color\n              }}\n            />\n          </div>\n          <span className=\"progress-text\">\n            {Math.round(progressPercentage)}%\n          </span>\n        </div>\n      </div>\n\n      {/* Task list - Implements D10 */}\n      <div className=\"card-body\">\n        {/* Uncompleted tasks - always shown */}\n        <div className=\"task-section\">\n          {uncompletedTasks.length > 0 ? (\n            <div className=\"task-list\">\n              {uncompletedTasks.map(task => (\n                <TaskItem\n                  key={task.id}\n                  task={getTaskWithEvent(task)}\n                  onToggle={() => onTaskToggle(task.id)}\n                  onEdit={() => onEditTask(task)}\n                  onDelete={() => onTaskDelete(task.id)}\n                />\n              ))}\n            </div>\n          ) : (\n            <div className=\"empty-state\">\n              <p className=\"text-muted\">No pending tasks</p>\n            </div>\n          )}\n\n          {/* Inline task creation form */}\n          {isCreatingTask && (\n            <div className=\"task-list\">\n              <InlineTaskCreator\n                project={project}\n                events={events}\n                onSave={onInlineTaskSave}\n                onCancel={onInlineTaskCancel}\n              />\n            </div>\n          )}\n        </div>\n\n        {/* Completed tasks - shown when expanded - Implements D10 */}\n        {isExpanded && completedTasks.length > 0 && (\n          <div className=\"task-section completed-section\">\n            <div className=\"section-divider\">\n              <span className=\"text-muted\">Completed Tasks</span>\n            </div>\n            <div className=\"task-list\">\n              {completedTasks.map(task => (\n                <TaskItem\n                  key={task.id}\n                  task={getTaskWithEvent(task)}\n                  onToggle={() => onTaskToggle(task.id)}\n                  onEdit={() => onEditTask(task)}\n                  onDelete={() => onTaskDelete(task.id)}\n                />\n              ))}\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* Card footer with pill-shaped add task button and hover actions */}\n      <div className=\"card-footer\">\n        <button\n          className=\"btn btn-primary btn-pill add-task-btn\"\n          onClick={onCreateTask}\n        >\n          <Plus size={16} />\n          Add Task\n        </button>\n        \n        {/* Edit and delete buttons - appear on hover in bottom right */}\n        <div className=\"card-hover-actions\">\n          <button\n            className=\"btn btn-ghost btn-sm\"\n            onClick={onProjectEdit}\n            title=\"Edit project\"\n          >\n            <Edit size={16} />\n          </button>\n          <button\n            className=\"btn btn-ghost btn-sm\"\n            onClick={() => {\n              if (window.confirm('Are you sure you want to delete this project? All associated tasks and events will be removed.')) {\n                onProjectDelete();\n              }\n            }}\n            title=\"Delete project\"\n          >\n            <Trash2 size={16} />\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\n// Individual task item component - Implements R13.1, R13.2\nconst TaskItem = ({ task, onToggle, onEdit, onDelete }) => {\n  const [showActions, setShowActions] = useState(false);\n\n  const handleToggle = (e) => {\n    e.stopPropagation();\n    onToggle();\n  };\n\n  const handleEdit = (e) => {\n    e.stopPropagation();\n    onEdit();\n    setShowActions(false);\n  };\n\n  const handleDelete = (e) => {\n    e.stopPropagation();\n    if (window.confirm('Are you sure you want to delete this task?')) {\n      onDelete();\n    }\n    setShowActions(false);\n  };\n\n  return (\n    <div \n      className={`task-item ${task.completed ? 'completed' : ''}`}\n      onClick={() => setShowActions(!showActions)}\n    >\n      <div className=\"task-main\">\n        <button\n          className=\"task-checkbox\"\n          onClick={handleToggle}\n          title={task.completed ? \"Mark as incomplete\" : \"Mark as complete\"}\n        >\n          {task.completed ? (\n            <Check size={14} className=\"check-icon\" />\n          ) : (\n            <div className=\"checkbox-empty\" />\n          )}\n        </button>\n\n        <div className=\"task-content\">\n          <span className={`task-name ${task.completed ? 'completed-text' : ''}`}>\n            {task.name}\n          </span>\n          {task.event && (\n            <span className={`task-event-badge ${task.event.type}`}>\n              {task.event.name}\n            </span>\n          )}\n        </div>\n\n        <div className=\"task-actions\">\n          {showActions && (\n            <>\n              <button\n                className=\"btn btn-ghost btn-sm\"\n                onClick={handleEdit}\n                title=\"Edit task\"\n              >\n                <Edit size={12} />\n              </button>\n              <button\n                className=\"btn btn-ghost btn-sm\"\n                onClick={handleDelete}\n                title=\"Delete task\"\n              >\n                <Trash2 size={12} />\n              </button>\n            </>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\n// Inline task creator component for creating tasks directly in the list\nconst InlineTaskCreator = ({ project, events, onSave, onCancel }) => {\n  const [taskName, setTaskName] = useState('');\n  const [eventId, setEventId] = useState('');\n\n  const handleSubmit = () => {\n    if (taskName.trim()) {\n      const taskData = {\n        name: taskName.trim(),\n        projectId: project.id\n      };\n      \n      if (eventId) {\n        taskData.eventId = eventId;\n      }\n      \n      onSave(taskData);\n    }\n  };\n\n  const handleKeyPress = (e) => {\n    if (e.key === 'Enter') {\n      e.preventDefault();\n      handleSubmit();\n    } else if (e.key === 'Escape') {\n      onCancel();\n    }\n  };\n\n  const handleCancel = () => {\n    onCancel();\n  };\n\n  const handleEventSelect = (selectedEventId) => {\n    setEventId(selectedEventId === eventId ? '' : selectedEventId);\n  };\n\n  // Sort events by date for better UX\n  const sortedEvents = [...events].sort((a, b) => new Date(a.date) - new Date(b.date));\n\n  return (\n    <div className=\"inline-task-creator\">\n      <div className=\"task-creator-main\">\n        <div className=\"task-checkbox-placeholder\">\n          <div className=\"checkbox-empty\" />\n        </div>\n        \n        <div className=\"task-creator-content\">\n          <input\n            type=\"text\"\n            className=\"task-creator-input\"\n            placeholder=\"Enter task description...\"\n            value={taskName}\n            onChange={(e) => setTaskName(e.target.value)}\n            onKeyDown={handleKeyPress}\n            autoFocus\n          />\n          \n          {sortedEvents.length > 0 && (\n            <div className=\"task-creator-events\">\n              <div className=\"events-list\">\n                <div \n                  className={`event-option ${eventId === '' ? 'selected' : ''}`}\n                  onClick={() => setEventId('')}\n                >\n                  <div className=\"event-radio\">\n                    <div className={`radio-indicator ${eventId === '' ? 'active' : ''}`} />\n                  </div>\n                  <span className=\"event-name\">No specific event</span>\n                </div>\n                \n                {sortedEvents.map(event => (\n                  <div \n                    key={event.id}\n                    className={`event-option ${eventId === event.id ? 'selected' : ''}`}\n                    onClick={() => handleEventSelect(event.id)}\n                  >\n                    <div className=\"event-radio\">\n                      <div className={`radio-indicator ${eventId === event.id ? 'active' : ''}`} />\n                    </div>\n                    <div className=\"event-info\">\n                      <span className=\"event-name\">{event.name}</span>\n                      <span className={`event-type-badge ${event.type}`}>\n                        {event.type}\n                      </span>\n                      <span className=\"event-date\">\n                        {new Date(event.date).toLocaleDateString()}\n                      </span>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          )}\n        </div>\n\n        <div className=\"task-creator-actions\">\n          <button\n            className=\"btn btn-accent btn-sm task-creator-ok\"\n            onClick={handleSubmit}\n            disabled={!taskName.trim()}\n            title=\"Save task (Enter)\"\n          >\n            <Check size={14} />\n          </button>\n          <button\n            className=\"btn btn-ghost btn-sm\"\n            onClick={handleCancel}\n            title=\"Cancel (Escape)\"\n          >\n            <X size={14} />\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default TaskLists; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}