{"ast":null,"code":"var _jsxFileName = \"/home/carruc/repos/eva-frontend/client/src/components/HeatmapCalendar.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useMemo, useRef, useCallback } from 'react';\nimport { ChevronUp, ChevronDown, ChevronLeft, ChevronRight, X } from 'lucide-react';\nimport { dataUtils } from '../services/api';\nimport EventCard from './EventCard';\nimport './HeatmapCalendar.css';\n\n// Implements requirements R14, R15, D1-D8\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst HeatmapCalendar = ({\n  projects,\n  tasks,\n  events,\n  timeScale,\n  currentDate,\n  onTimeScaleChange,\n  onCurrentDateChange,\n  onProjectUpdate,\n  onProjectDelete,\n  onProjectEdit,\n  onEventEdit,\n  onEventDelete,\n  onNewProject,\n  onNewEvent,\n  showEventTitles,\n  onToggleEventTitles,\n  sidebarCollapsed = false\n}) => {\n  _s();\n  const [daysToShow, setDaysToShow] = useState(51); // Simple fixed value for now\n  const [hoveredCell, setHoveredCell] = useState(null);\n  const [contextMenu, setContextMenu] = useState(null);\n  const [isCustomTimeScale, setIsCustomTimeScale] = useState(false);\n  const [showEventCard, setShowEventCard] = useState(false);\n  const [eventCardPosition, setEventCardPosition] = useState({\n    x: 0,\n    y: 0\n  });\n  const calendarRef = useRef(null);\n  const newEventButtonRef = useRef(null);\n\n  // Automatically set custom mode if timeScale doesn't match presets\n  useEffect(() => {\n    const presetValues = [1, 3, 7];\n    if (!presetValues.includes(timeScale)) {\n      setIsCustomTimeScale(true);\n    }\n  }, [timeScale]);\n\n  // Calculate how many days can fit in the visible area\n  // This determines the number of columns that will be visible without horizontal scrolling\n  const calculateDaysThatFit = useCallback(() => {\n    if (!calendarRef.current) return 52; // Fallback\n\n    // Calculate available width more accurately based on sidebar state\n    const viewportWidth = window.innerWidth;\n\n    // Account for sidebar width\n    const sidebarWidth = sidebarCollapsed ? 0 : window.innerWidth <= 1024 ? 260 : 280;\n\n    // Account for main content padding\n    const contentPadding = window.innerWidth <= 480 ? 32 : window.innerWidth <= 768 ? 48 : 64; // 2 * spacing\n\n    // Calculate available width for the heatmap\n    const availableWidth = viewportWidth - sidebarWidth - contentPadding;\n\n    // Project column width (from CSS)\n    const projectColumnWidth = window.innerWidth <= 768 ? 160 : window.innerWidth <= 1024 ? 200 : 250;\n\n    // Calculate available space for date columns\n    const availableSpaceForDates = availableWidth - projectColumnWidth;\n\n    // Minimum column width for date columns\n    const minColumnWidth = window.innerWidth <= 768 ? 28 : 32;\n\n    // Calculate maximum number of columns that can fit\n    const maxColumns = Math.floor(availableSpaceForDates / minColumnWidth);\n\n    // Return the calculated number, with reasonable bounds\n    return Math.max(Math.min(maxColumns, 100), 15); // Min 15, Max 100 columns\n  }, [sidebarCollapsed]);\n\n  // Use the calculated number of days that fit in the visible area\n  const visibleDays = calculateDaysThatFit();\n\n  // Update daysToShow when the calculation changes\n  useEffect(() => {\n    const newDaysToShow = calculateDaysThatFit();\n    setDaysToShow(newDaysToShow);\n  }, [calculateDaysThatFit]);\n\n  // Recalculate when sidebar state changes with a slight delay for transition\n  useEffect(() => {\n    const timeoutId = setTimeout(() => {\n      const newDaysToShow = calculateDaysThatFit();\n      setDaysToShow(newDaysToShow);\n    }, 350); // Slightly longer than the 300ms sidebar transition\n\n    return () => clearTimeout(timeoutId);\n  }, [sidebarCollapsed, calculateDaysThatFit]);\n\n  // Recalculate on window resize\n  useEffect(() => {\n    const handleResize = () => {\n      setTimeout(() => {\n        const newDaysToShow = calculateDaysThatFit();\n        setDaysToShow(newDaysToShow);\n      }, 100);\n    };\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, [calculateDaysThatFit]);\n\n  // Create the grid template for exactly the number of visible days\n  const gridTemplateColumns = `250px repeat(${visibleDays}, minmax(20px, 32px))`;\n\n  // Generate date range for the heatmap - Implements D1.1, D4\n  const dateRange = useMemo(() => {\n    // Custom date range generation for fixed number of columns\n    const generateFixedColumnDateRange = (centerDate, timeScale, numColumns) => {\n      const dates = [];\n      const center = new Date(centerDate);\n\n      // Start from 7 days before the center date\n      const startDate = new Date(center);\n      startDate.setDate(center.getDate() - 7);\n\n      // Generate exactly numColumns dates, each representing timeScale days\n      for (let i = 0; i < numColumns; i++) {\n        const date = new Date(startDate);\n        date.setDate(startDate.getDate() + i * timeScale);\n        dates.push(new Date(date));\n      }\n      return dates;\n    };\n    return generateFixedColumnDateRange(currentDate, timeScale, visibleDays);\n  }, [currentDate, timeScale, visibleDays]);\n\n  // Sort and filter projects - Implements D7, D8\n  const visibleProjects = useMemo(() => {\n    return dataUtils.getVisibleProjects(dataUtils.sortProjects(projects));\n  }, [projects]);\n  const hiddenProjects = useMemo(() => {\n    return dataUtils.getHiddenProjects(projects);\n  }, [projects]);\n\n  // Calculate heatmap data - Implements D2\n  const heatmapData = useMemo(() => {\n    const data = {};\n\n    // Debug: Log all events to see what we have\n    if (events.length > 0) {\n      console.log('All events in heatmap calculation:', events);\n    }\n    projects.forEach(project => {\n      data[project.id] = {};\n      const projectEvents = dataUtils.getProjectEvents(events, project.id);\n\n      // Debug: Log project events\n      if (projectEvents.length > 0) {\n        console.log(`Project \"${project.name}\" events:`, projectEvents);\n      }\n      dateRange.forEach(date => {\n        const completedCount = dataUtils.getCompletedTasksCount(tasks, project.id, date);\n        const intensity = dataUtils.getHeatmapIntensity(completedCount);\n        const eventsForDate = dataUtils.getEventsForDate(projectEvents, date);\n\n        // Debug: Log when events are found for a date\n        if (eventsForDate.length > 0) {\n          console.log(`Found ${eventsForDate.length} events for ${date.toISOString().split('T')[0]}:`, eventsForDate);\n        }\n        data[project.id][date.toISOString()] = {\n          completedTasks: completedCount,\n          intensity,\n          events: eventsForDate,\n          color: dataUtils.getHeatmapCellColor(project.color, intensity)\n        };\n      });\n    });\n    return data;\n  }, [projects, tasks, events, dateRange]);\n\n  // Handle project order changes - Implements D8\n  const handleMoveProject = async (projectId, direction) => {\n    const project = projects.find(p => p.id === projectId);\n    if (!project) return;\n    const currentOrder = project.order;\n    const newOrder = direction === 'up' ? currentOrder - 1 : currentOrder + 1;\n\n    // Find the project to swap with\n    const targetProject = projects.find(p => p.order === newOrder);\n    if (!targetProject) return;\n\n    // Swap orders\n    await onProjectUpdate(projectId, {\n      order: newOrder\n    });\n    await onProjectUpdate(targetProject.id, {\n      order: currentOrder\n    });\n  };\n\n  // Handle project visibility toggle - Implements D7\n  const handleToggleHidden = async projectId => {\n    const project = projects.find(p => p.id === projectId);\n    if (project) {\n      // If we're trying to show a hidden project, check the 6-project limit\n      if (project.hidden) {\n        const visibleProjects = projects.filter(p => !p.hidden);\n        if (visibleProjects.length >= 6) {\n          // Don't show the project and display an error message\n          alert('You can only have 6 visible projects at a time. Please hide another project first.');\n          return;\n        }\n      }\n      await onProjectUpdate(projectId, {\n        hidden: !project.hidden\n      });\n    }\n  };\n\n  // Navigate calendar - Implements D4\n  const navigateCalendar = direction => {\n    const newDate = new Date(currentDate);\n    const days = direction === 'left' ? -timeScale * 7 : timeScale * 7;\n    newDate.setDate(newDate.getDate() + days);\n    onCurrentDateChange(newDate);\n  };\n\n  // Handle context menu\n  const handleCellContextMenu = (e, project, date) => {\n    var _heatmapData$project$, _heatmapData$project$2;\n    e.preventDefault();\n    const cellEvents = ((_heatmapData$project$ = heatmapData[project.id]) === null || _heatmapData$project$ === void 0 ? void 0 : (_heatmapData$project$2 = _heatmapData$project$[date.toISOString()]) === null || _heatmapData$project$2 === void 0 ? void 0 : _heatmapData$project$2.events) || [];\n    setContextMenu({\n      x: e.clientX,\n      y: e.clientY,\n      project,\n      date,\n      events: cellEvents\n    });\n  };\n\n  // Handle context menu clicks outside to close\n  useEffect(() => {\n    if (contextMenu) {\n      const handleClickOutside = () => setContextMenu(null);\n      document.addEventListener('click', handleClickOutside);\n      return () => document.removeEventListener('click', handleClickOutside);\n    }\n  }, [contextMenu]);\n\n  // Handle New Event button click with positioning\n  const handleNewEvent = e => {\n    e.preventDefault();\n    e.stopPropagation();\n    if (newEventButtonRef.current) {\n      const buttonRect = newEventButtonRef.current.getBoundingClientRect();\n      const cardWidth = 400; // Card width from CSS\n      const cardHeight = 600; // Estimated max height\n      const margin = 10; // Margin from edges\n\n      // Calculate initial position (to the left of the button)\n      let x = buttonRect.left - cardWidth - margin;\n      let y = buttonRect.top;\n\n      // Check if card would go off the left edge of the screen\n      if (x < margin) {\n        // If so, position it to the right of the button instead\n        x = buttonRect.right + margin;\n      }\n\n      // Check if card would go off the right edge of the screen\n      if (x + cardWidth > window.innerWidth - margin) {\n        // Position it centered under the button as fallback\n        x = buttonRect.left + buttonRect.width / 2 - cardWidth / 2;\n        y = buttonRect.bottom + margin;\n      }\n\n      // Ensure it doesn't go off the left edge (final check)\n      if (x < margin) {\n        x = margin;\n      }\n\n      // Ensure it doesn't go off the right edge (final check)\n      if (x + cardWidth > window.innerWidth - margin) {\n        x = window.innerWidth - cardWidth - margin;\n      }\n\n      // Check if card would go off the bottom of the screen\n      if (y + cardHeight > window.innerHeight - margin) {\n        // Position it above the button instead\n        y = buttonRect.top - cardHeight - margin;\n      }\n\n      // Ensure it doesn't go off the top edge\n      if (y < margin) {\n        y = margin;\n      }\n      setEventCardPosition({\n        x,\n        y\n      });\n      setShowEventCard(true);\n    }\n  };\n\n  // Handle event card close\n  const handleEventCardClose = () => {\n    setShowEventCard(false);\n  };\n\n  // Handle event card save\n  const handleEventCardSave = eventData => {\n    onNewEvent(eventData);\n    setShowEventCard(false);\n  };\n\n  // Get month headers - Implements D1.2\n  const getMonthHeaders = () => {\n    const potentialHeaders = [];\n    dateRange.forEach((date, index) => {\n      // For each cell, check if the 1st of any month falls within its timeScale period\n      const cellStartDate = new Date(date);\n      const cellEndDate = new Date(date);\n      cellEndDate.setDate(cellStartDate.getDate() + timeScale - 1);\n\n      // Check if the 1st of any month falls within this cell's date range\n      let monthStartInCell = null;\n\n      // Check each day within the cell's timeScale period\n      for (let dayOffset = 0; dayOffset < timeScale; dayOffset++) {\n        const checkDate = new Date(cellStartDate);\n        checkDate.setDate(cellStartDate.getDate() + dayOffset);\n        if (checkDate.getDate() === 1) {\n          monthStartInCell = checkDate;\n          break;\n        }\n      }\n\n      // If we found a month start within this cell, add to potential headers\n      if (monthStartInCell) {\n        const monthYear = `${monthStartInCell.getFullYear()}-${monthStartInCell.getMonth()}`;\n\n        // Make sure we haven't already added this month\n        if (!potentialHeaders.some(h => h.monthYear === monthYear)) {\n          const monthName = monthStartInCell.toLocaleDateString('en-US', {\n            month: 'short'\n          });\n          potentialHeaders.push({\n            month: monthName,\n            monthYear: monthYear,\n            position: index + 1,\n            // +1 to account for project column\n            year: monthStartInCell.getFullYear(),\n            date: new Date(monthStartInCell),\n            isJanuary: monthName === 'Jan'\n          });\n        }\n      }\n\n      // Special case: if this is the first cell and no month header was added yet,\n      // add the current month to avoid empty headers\n      if (index === 0 && potentialHeaders.length === 0) {\n        const monthName = date.toLocaleDateString('en-US', {\n          month: 'short'\n        });\n        const monthYear = `${date.getFullYear()}-${date.getMonth()}`;\n        potentialHeaders.push({\n          month: monthName,\n          monthYear: monthYear,\n          position: index + 1,\n          year: date.getFullYear(),\n          date: new Date(date),\n          isJanuary: monthName === 'Jan'\n        });\n      }\n    });\n\n    // Different filtering logic based on timeScale\n    if (timeScale > 10) {\n      // For large timescales, show most recent month and then every 3-4 cells\n      const filteredHeaders = [];\n\n      // Sort by date (most recent first)\n      const sortedHeaders = potentialHeaders.sort((a, b) => b.date - a.date);\n      if (sortedHeaders.length > 0) {\n        // Always include the most recent month\n        const mostRecent = sortedHeaders[0];\n        filteredHeaders.push(mostRecent);\n\n        // Then add months that are approximately 3-4 cells away\n        const targetSpacing = 3.5; // Average of 3 and 4\n        let lastIncludedPosition = mostRecent.position;\n\n        // Sort remaining headers by position for consistent spacing\n        const remainingHeaders = sortedHeaders.slice(1).sort((a, b) => a.position - b.position);\n        for (const header of remainingHeaders) {\n          const distance = Math.abs(header.position - lastIncludedPosition);\n\n          // Include if it's far enough from the last included header\n          if (distance >= Math.floor(targetSpacing)) {\n            filteredHeaders.push(header);\n            lastIncludedPosition = header.position;\n          }\n        }\n      }\n      return filteredHeaders.sort((a, b) => a.position - b.position);\n    } else {\n      // Original logic for smaller timescales\n      const filteredHeaders = [];\n\n      // Sort by position (chronological order)\n      const sortedHeaders = potentialHeaders.sort((a, b) => a.position - b.position);\n      for (let i = 0; i < sortedHeaders.length; i++) {\n        const currentHeader = sortedHeaders[i];\n        let shouldInclude = true;\n\n        // Check if this header is too close to any already included header\n        for (const includedHeader of filteredHeaders) {\n          const distance = Math.abs(currentHeader.position - includedHeader.position);\n          if (distance < 3) {\n            // Too close - prioritize the more recent one\n            if (currentHeader.date > includedHeader.date) {\n              // Remove the older header and include the current one\n              const indexToRemove = filteredHeaders.findIndex(h => h.monthYear === includedHeader.monthYear);\n              filteredHeaders.splice(indexToRemove, 1);\n            } else {\n              // Keep the existing newer header, skip current one\n              shouldInclude = false;\n              break;\n            }\n          }\n        }\n        if (shouldInclude) {\n          filteredHeaders.push(currentHeader);\n        }\n      }\n      return filteredHeaders;\n    }\n  };\n  const monthHeaders = getMonthHeaders();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"heatmap-calendar\",\n    ref: calendarRef,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"heatmap-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"heatmap-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-ghost\",\n          onClick: () => navigateCalendar('left'),\n          title: \"Previous week\",\n          children: /*#__PURE__*/_jsxDEV(ChevronLeft, {\n            size: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 458,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 453,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-ghost\",\n          onClick: () => onCurrentDateChange(new Date()),\n          title: \"Go to today\",\n          children: \"Today\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 461,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-ghost\",\n          onClick: () => navigateCalendar('right'),\n          title: \"Next week\",\n          children: /*#__PURE__*/_jsxDEV(ChevronRight, {\n            size: 16\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 474,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 469,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 452,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"timescale-control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-label\",\n          children: \"Days per Cell:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 479,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"timescale-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: `timescale-btn ${timeScale === 1 && !isCustomTimeScale ? 'active' : ''}`,\n            onClick: () => {\n              setIsCustomTimeScale(false);\n              onTimeScaleChange(1);\n            },\n            children: \"1 day\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 481,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `timescale-btn ${timeScale === 3 && !isCustomTimeScale ? 'active' : ''}`,\n            onClick: () => {\n              setIsCustomTimeScale(false);\n              onTimeScaleChange(3);\n            },\n            children: \"3 day\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 490,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `timescale-btn ${timeScale === 7 && !isCustomTimeScale ? 'active' : ''}`,\n            onClick: () => {\n              setIsCustomTimeScale(false);\n              onTimeScaleChange(7);\n            },\n            children: \"week\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 499,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `timescale-btn ${isCustomTimeScale ? 'active' : ''}`,\n            onClick: () => setIsCustomTimeScale(true),\n            children: \"Custom\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 508,\n            columnNumber: 13\n          }, this), isCustomTimeScale && /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            min: \"1\",\n            max: \"30\",\n            value: timeScale,\n            onChange: e => onTimeScaleChange(parseInt(e.target.value) || 1),\n            className: \"input custom-timescale-input\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 515,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 480,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 478,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 451,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"heatmap-grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"month-headers\",\n        style: {\n          gridTemplateColumns\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"project-column-header\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 532,\n          columnNumber: 11\n        }, this), dateRange.map((date, index) => {\n          const monthHeader = monthHeaders.find(h => h.position === index + 1);\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `month-header ${monthHeader !== null && monthHeader !== void 0 && monthHeader.isJanuary ? 'january-header' : ''}`,\n            children: monthHeader && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [monthHeader.isJanuary && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"month-year\",\n                children: monthHeader.year\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 540,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"month-name\",\n                children: monthHeader.month\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 542,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 536,\n            columnNumber: 15\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 531,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"date-headers\",\n        style: {\n          gridTemplateColumns\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"project-column-header\",\n          children: \"Projects\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 552,\n          columnNumber: 11\n        }, this), dateRange.map((date, index) => {\n          const today = new Date();\n          const isPastDate = date < today && date.toDateString() !== today.toDateString();\n\n          // Get weekday initial (M, T, W, T, F, S, SS)\n          const dayOfWeek = date.getDay(); // 0 = Sunday, 1 = Monday, etc.\n          const weekdayInitials = ['SS', 'M', 'T', 'W', 'T', 'F', 'S'];\n          const weekdayInitial = weekdayInitials[dayOfWeek];\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `date-header ${isPastDate ? 'past-date' : ''}`,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"date-day\",\n              children: date.getDate()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 564,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"date-weekday\",\n              children: weekdayInitial\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 565,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 563,\n            columnNumber: 15\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 551,\n        columnNumber: 9\n      }, this), visibleProjects.map(project => /*#__PURE__*/_jsxDEV(ProjectRow, {\n        project: project,\n        dateRange: dateRange,\n        heatmapData: heatmapData[project.id] || {},\n        gridTemplateColumns: gridTemplateColumns,\n        onMoveUp: () => handleMoveProject(project.id, 'up'),\n        onMoveDown: () => handleMoveProject(project.id, 'down'),\n        onToggleHidden: () => handleToggleHidden(project.id),\n        onEdit: () => onProjectEdit(project),\n        onDelete: () => onProjectDelete(project.id),\n        onCellContextMenu: handleCellContextMenu,\n        onCellHover: setHoveredCell,\n        onEventEdit: onEventEdit,\n        events: dataUtils.getProjectEvents(events, project.id),\n        showEventTitles: showEventTitles\n      }, project.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 575,\n        columnNumber: 11\n      }, this)), hiddenProjects.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"hidden-projects-bar\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-muted\",\n          children: \"Hidden projects:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 597,\n          columnNumber: 13\n        }, this), hiddenProjects.map(project => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-ghost btn-sm\",\n          onClick: () => handleToggleHidden(project.id),\n          style: {\n            color: project.color\n          },\n          children: project.name\n        }, project.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 599,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 596,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"heatmap-action-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary btn-project\",\n          onClick: onNewProject,\n          children: \"+ New Project\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 613,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-secondary btn-event\",\n          ref: newEventButtonRef,\n          onClick: handleNewEvent,\n          children: \"+ New Event\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 619,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 612,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 529,\n      columnNumber: 7\n    }, this), contextMenu && /*#__PURE__*/_jsxDEV(ContextMenu, {\n      contextMenu: contextMenu,\n      onEventEdit: onEventEdit,\n      onEventDelete: onEventDelete,\n      onClose: () => setContextMenu(null)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 631,\n      columnNumber: 9\n    }, this), hoveredCell && /*#__PURE__*/_jsxDEV(CellTooltip, {\n      hoveredCell: hoveredCell\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 641,\n      columnNumber: 9\n    }, this), showEventCard && /*#__PURE__*/_jsxDEV(EventCard, {\n      event: null,\n      projects: projects,\n      onSave: handleEventCardSave,\n      onClose: handleEventCardClose,\n      position: eventCardPosition\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 646,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 449,\n    columnNumber: 5\n  }, this);\n};\n\n// Project row component - Implements D3, D8\n_s(HeatmapCalendar, \"0DcFwRnp79sgbdjMg14eIU18d7U=\");\n_c = HeatmapCalendar;\nconst ProjectRow = ({\n  project,\n  dateRange,\n  heatmapData,\n  gridTemplateColumns,\n  onMoveUp,\n  onMoveDown,\n  onToggleHidden,\n  onEdit,\n  onDelete,\n  onCellContextMenu,\n  onCellHover,\n  onEventEdit,\n  events,\n  showEventTitles\n}) => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"project-row\",\n      style: {\n        gridTemplateColumns\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"project-header\",\n        style: {\n          '--project-pill-color': project.color\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"project-info\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"project-main-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"project-name\",\n              title: project.name,\n              children: project.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 687,\n              columnNumber: 15\n            }, this), events.length > 0 && /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"project-events-count text-muted\",\n              children: [events.length, \" event\", events.length !== 1 ? 's' : '']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 689,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 686,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 685,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"project-actions-right\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"move-buttons-stack\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn-ghost btn-sm move-up\",\n              onClick: e => {\n                e.stopPropagation();\n                onMoveUp();\n              },\n              title: \"Move up\",\n              children: /*#__PURE__*/_jsxDEV(ChevronUp, {\n                size: 12\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 707,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 699,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn-ghost btn-sm move-down\",\n              onClick: e => {\n                e.stopPropagation();\n                onMoveDown();\n              },\n              title: \"Move down\",\n              children: /*#__PURE__*/_jsxDEV(ChevronDown, {\n                size: 12\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 717,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 709,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 698,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn-ghost btn-sm\",\n            onClick: e => {\n              e.stopPropagation();\n              onToggleHidden();\n            },\n            title: \"Hide project\",\n            children: /*#__PURE__*/_jsxDEV(X, {\n              size: 14\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 728,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 720,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 697,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 680,\n        columnNumber: 9\n      }, this), dateRange.map((date, dateIndex) => {\n        const cellData = heatmapData[date.toISOString()] || {\n          completedTasks: 0,\n          intensity: 0,\n          events: [],\n          color: 'transparent'\n        };\n        const hasDeadline = cellData.events.some(e => e.type === 'deadline');\n        const hasMilestone = cellData.events.some(e => e.type === 'milestone');\n        const today = new Date();\n        const isPastDate = date < today && date.toDateString() !== today.toDateString();\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `heatmap-cell ${hasDeadline ? 'has-deadline' : ''} ${hasMilestone ? 'has-milestone' : ''} ${isPastDate ? 'past-date' : ''}`,\n          onContextMenu: e => onCellContextMenu(e, project, date),\n          onMouseEnter: () => onCellHover({\n            project,\n            date,\n            data: cellData\n          }),\n          onMouseLeave: () => onCellHover(null),\n          title: `${project.name} - ${dataUtils.formatDate(date)}: ${cellData.completedTasks} tasks completed`,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"heatmap-square\",\n            style: {\n              backgroundColor: cellData.intensity > 0 ? project.color : 'var(--border)',\n              border: cellData.intensity === 0 ? `1px solid ${project.color}15` : 'none',\n              opacity: (() => {\n                let baseOpacity;\n                if (cellData.intensity === 0) {\n                  baseOpacity = 0.4; // Subtle grey for 0 tasks\n                } else {\n                  // Scale from 0.3 to 1.0 based on tasks (max at 10+ tasks)\n                  const normalizedIntensity = Math.min(cellData.completedTasks / 10, 1);\n                  baseOpacity = 0.3 + normalizedIntensity * 0.7;\n                }\n                // Reduce opacity for past dates\n                return isPastDate ? baseOpacity * 0.7 : baseOpacity;\n              })()\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 761,\n            columnNumber: 15\n          }, this), cellData.events.length > 0 && showEventTitles && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cell-event-names\",\n            children: cellData.events.map(event => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `event-name ${event.type}`,\n              onClick: e => {\n                e.stopPropagation();\n                onEventEdit(event);\n              },\n              children: event.name\n            }, event.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 785,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 783,\n            columnNumber: 17\n          }, this)]\n        }, dateIndex, true, {\n          fileName: _jsxFileName,\n          lineNumber: 748,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 678,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n// Context menu component\n_c2 = ProjectRow;\nconst ContextMenu = ({\n  contextMenu,\n  onEventEdit,\n  onEventDelete,\n  onClose\n}) => {\n  const {\n    x,\n    y,\n    project,\n    date,\n    events\n  } = contextMenu;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"context-menu\",\n    style: {\n      position: 'fixed',\n      left: x,\n      top: y,\n      zIndex: 1000\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"context-menu-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: project.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 821,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 822,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-muted\",\n        children: dataUtils.formatDate(date, 'long')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 823,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 820,\n      columnNumber: 7\n    }, this), events.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"context-menu-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"context-menu-label\",\n        children: \"Events:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 828,\n        columnNumber: 11\n      }, this), events.map(event => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"context-menu-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: `event-type-badge ${event.type}`,\n          children: event.type\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 831,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: event.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 834,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"event-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn-ghost btn-sm\",\n            onClick: () => {\n              onEventEdit(event);\n              onClose();\n            },\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 836,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn-ghost btn-sm\",\n            onClick: () => {\n              onEventDelete(event.id);\n              onClose();\n            },\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 845,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 835,\n          columnNumber: 15\n        }, this)]\n      }, event.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 830,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 827,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 811,\n    columnNumber: 5\n  }, this);\n};\n\n// Cell tooltip component\n_c3 = ContextMenu;\nconst CellTooltip = ({\n  hoveredCell\n}) => {\n  const {\n    project,\n    date,\n    data\n  } = hoveredCell;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cell-tooltip\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tooltip-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        style: {\n          color: project.color\n        },\n        children: project.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 870,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"text-muted\",\n        children: dataUtils.formatDate(date, 'long')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 871,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 869,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tooltip-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Tasks completed: \", data.completedTasks]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 874,\n        columnNumber: 9\n      }, this), data.events.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Events: \", data.events.map(e => e.name).join(', ')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 876,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 873,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 868,\n    columnNumber: 5\n  }, this);\n};\n_c4 = CellTooltip;\nexport default HeatmapCalendar;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"HeatmapCalendar\");\n$RefreshReg$(_c2, \"ProjectRow\");\n$RefreshReg$(_c3, \"ContextMenu\");\n$RefreshReg$(_c4, \"CellTooltip\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","useRef","useCallback","ChevronUp","ChevronDown","ChevronLeft","ChevronRight","X","dataUtils","EventCard","jsxDEV","_jsxDEV","Fragment","_Fragment","HeatmapCalendar","projects","tasks","events","timeScale","currentDate","onTimeScaleChange","onCurrentDateChange","onProjectUpdate","onProjectDelete","onProjectEdit","onEventEdit","onEventDelete","onNewProject","onNewEvent","showEventTitles","onToggleEventTitles","sidebarCollapsed","_s","daysToShow","setDaysToShow","hoveredCell","setHoveredCell","contextMenu","setContextMenu","isCustomTimeScale","setIsCustomTimeScale","showEventCard","setShowEventCard","eventCardPosition","setEventCardPosition","x","y","calendarRef","newEventButtonRef","presetValues","includes","calculateDaysThatFit","current","viewportWidth","window","innerWidth","sidebarWidth","contentPadding","availableWidth","projectColumnWidth","availableSpaceForDates","minColumnWidth","maxColumns","Math","floor","max","min","visibleDays","newDaysToShow","timeoutId","setTimeout","clearTimeout","handleResize","addEventListener","removeEventListener","gridTemplateColumns","dateRange","generateFixedColumnDateRange","centerDate","numColumns","dates","center","Date","startDate","setDate","getDate","i","date","push","visibleProjects","getVisibleProjects","sortProjects","hiddenProjects","getHiddenProjects","heatmapData","data","length","console","log","forEach","project","id","projectEvents","getProjectEvents","name","completedCount","getCompletedTasksCount","intensity","getHeatmapIntensity","eventsForDate","getEventsForDate","toISOString","split","completedTasks","color","getHeatmapCellColor","handleMoveProject","projectId","direction","find","p","currentOrder","order","newOrder","targetProject","handleToggleHidden","hidden","filter","alert","navigateCalendar","newDate","days","handleCellContextMenu","e","_heatmapData$project$","_heatmapData$project$2","preventDefault","cellEvents","clientX","clientY","handleClickOutside","document","handleNewEvent","stopPropagation","buttonRect","getBoundingClientRect","cardWidth","cardHeight","margin","left","top","right","width","bottom","innerHeight","handleEventCardClose","handleEventCardSave","eventData","getMonthHeaders","potentialHeaders","index","cellStartDate","cellEndDate","monthStartInCell","dayOffset","checkDate","monthYear","getFullYear","getMonth","some","h","monthName","toLocaleDateString","month","position","year","isJanuary","filteredHeaders","sortedHeaders","sort","a","b","mostRecent","targetSpacing","lastIncludedPosition","remainingHeaders","slice","header","distance","abs","currentHeader","shouldInclude","includedHeader","indexToRemove","findIndex","splice","monthHeaders","className","ref","children","onClick","title","size","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","parseInt","target","style","map","monthHeader","today","isPastDate","toDateString","dayOfWeek","getDay","weekdayInitials","weekdayInitial","ProjectRow","onMoveUp","onMoveDown","onToggleHidden","onEdit","onDelete","onCellContextMenu","onCellHover","ContextMenu","onClose","CellTooltip","event","onSave","_c","dateIndex","cellData","hasDeadline","hasMilestone","onContextMenu","onMouseEnter","onMouseLeave","formatDate","backgroundColor","border","opacity","baseOpacity","normalizedIntensity","_c2","zIndex","_c3","join","_c4","$RefreshReg$"],"sources":["/home/carruc/repos/eva-frontend/client/src/components/HeatmapCalendar.js"],"sourcesContent":["import React, { useState, useEffect, useMemo, useRef, useCallback } from 'react';\nimport { ChevronUp, ChevronDown, ChevronLeft, ChevronRight, X } from 'lucide-react';\nimport { dataUtils } from '../services/api';\nimport EventCard from './EventCard';\nimport './HeatmapCalendar.css';\n\n// Implements requirements R14, R15, D1-D8\nconst HeatmapCalendar = ({\n  projects,\n  tasks,\n  events,\n  timeScale,\n  currentDate,\n  onTimeScaleChange,\n  onCurrentDateChange,\n  onProjectUpdate,\n  onProjectDelete,\n  onProjectEdit,\n  onEventEdit,\n  onEventDelete,\n  onNewProject,\n  onNewEvent,\n  showEventTitles,\n  onToggleEventTitles,\n  sidebarCollapsed = false\n}) => {\n  const [daysToShow, setDaysToShow] = useState(51); // Simple fixed value for now\n  const [hoveredCell, setHoveredCell] = useState(null);\n  const [contextMenu, setContextMenu] = useState(null);\n  const [isCustomTimeScale, setIsCustomTimeScale] = useState(false);\n  const [showEventCard, setShowEventCard] = useState(false);\n  const [eventCardPosition, setEventCardPosition] = useState({ x: 0, y: 0 });\n  const calendarRef = useRef(null);\n  const newEventButtonRef = useRef(null);\n\n  // Automatically set custom mode if timeScale doesn't match presets\n  useEffect(() => {\n    const presetValues = [1, 3, 7];\n    if (!presetValues.includes(timeScale)) {\n      setIsCustomTimeScale(true);\n    }\n  }, [timeScale]);\n\n  // Calculate how many days can fit in the visible area\n  // This determines the number of columns that will be visible without horizontal scrolling\n  const calculateDaysThatFit = useCallback(() => {\n    if (!calendarRef.current) return 52; // Fallback\n    \n    // Calculate available width more accurately based on sidebar state\n    const viewportWidth = window.innerWidth;\n    \n    // Account for sidebar width\n    const sidebarWidth = sidebarCollapsed ? 0 : (window.innerWidth <= 1024 ? 260 : 280);\n    \n    // Account for main content padding\n    const contentPadding = window.innerWidth <= 480 ? 32 : window.innerWidth <= 768 ? 48 : 64; // 2 * spacing\n    \n    // Calculate available width for the heatmap\n    const availableWidth = viewportWidth - sidebarWidth - contentPadding;\n    \n    // Project column width (from CSS)\n    const projectColumnWidth = window.innerWidth <= 768 ? 160 : window.innerWidth <= 1024 ? 200 : 250;\n    \n    // Calculate available space for date columns\n    const availableSpaceForDates = availableWidth - projectColumnWidth;\n    \n    // Minimum column width for date columns\n    const minColumnWidth = window.innerWidth <= 768 ? 28 : 32;\n    \n    // Calculate maximum number of columns that can fit\n    const maxColumns = Math.floor(availableSpaceForDates / minColumnWidth);\n    \n    // Return the calculated number, with reasonable bounds\n    return Math.max(Math.min(maxColumns, 100), 15); // Min 15, Max 100 columns\n  }, [sidebarCollapsed]);\n\n  // Use the calculated number of days that fit in the visible area\n  const visibleDays = calculateDaysThatFit();\n\n  // Update daysToShow when the calculation changes\n  useEffect(() => {\n    const newDaysToShow = calculateDaysThatFit();\n    setDaysToShow(newDaysToShow);\n  }, [calculateDaysThatFit]);\n\n  // Recalculate when sidebar state changes with a slight delay for transition\n  useEffect(() => {\n    const timeoutId = setTimeout(() => {\n      const newDaysToShow = calculateDaysThatFit();\n      setDaysToShow(newDaysToShow);\n    }, 350); // Slightly longer than the 300ms sidebar transition\n\n    return () => clearTimeout(timeoutId);\n  }, [sidebarCollapsed, calculateDaysThatFit]);\n\n  // Recalculate on window resize\n  useEffect(() => {\n    const handleResize = () => {\n      setTimeout(() => {\n        const newDaysToShow = calculateDaysThatFit();\n        setDaysToShow(newDaysToShow);\n      }, 100);\n    };\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, [calculateDaysThatFit]);\n\n  // Create the grid template for exactly the number of visible days\n  const gridTemplateColumns = `250px repeat(${visibleDays}, minmax(20px, 32px))`;\n\n  // Generate date range for the heatmap - Implements D1.1, D4\n  const dateRange = useMemo(() => {\n    // Custom date range generation for fixed number of columns\n    const generateFixedColumnDateRange = (centerDate, timeScale, numColumns) => {\n      const dates = [];\n      const center = new Date(centerDate);\n      \n      // Start from 7 days before the center date\n      const startDate = new Date(center);\n      startDate.setDate(center.getDate() - 7);\n      \n      // Generate exactly numColumns dates, each representing timeScale days\n      for (let i = 0; i < numColumns; i++) {\n        const date = new Date(startDate);\n        date.setDate(startDate.getDate() + (i * timeScale));\n        dates.push(new Date(date));\n      }\n      \n      return dates;\n    };\n    \n    return generateFixedColumnDateRange(currentDate, timeScale, visibleDays);\n  }, [currentDate, timeScale, visibleDays]);\n\n  // Sort and filter projects - Implements D7, D8\n  const visibleProjects = useMemo(() => {\n    return dataUtils.getVisibleProjects(dataUtils.sortProjects(projects));\n  }, [projects]);\n\n  const hiddenProjects = useMemo(() => {\n    return dataUtils.getHiddenProjects(projects);\n  }, [projects]);\n\n  // Calculate heatmap data - Implements D2\n  const heatmapData = useMemo(() => {\n    const data = {};\n    \n    // Debug: Log all events to see what we have\n    if (events.length > 0) {\n      console.log('All events in heatmap calculation:', events);\n    }\n    \n    projects.forEach(project => {\n      data[project.id] = {};\n      const projectEvents = dataUtils.getProjectEvents(events, project.id);\n      \n      // Debug: Log project events\n      if (projectEvents.length > 0) {\n        console.log(`Project \"${project.name}\" events:`, projectEvents);\n      }\n      \n      dateRange.forEach(date => {\n        const completedCount = dataUtils.getCompletedTasksCount(tasks, project.id, date);\n        const intensity = dataUtils.getHeatmapIntensity(completedCount);\n        const eventsForDate = dataUtils.getEventsForDate(projectEvents, date);\n        \n        // Debug: Log when events are found for a date\n        if (eventsForDate.length > 0) {\n          console.log(`Found ${eventsForDate.length} events for ${date.toISOString().split('T')[0]}:`, eventsForDate);\n        }\n        \n        data[project.id][date.toISOString()] = {\n          completedTasks: completedCount,\n          intensity,\n          events: eventsForDate,\n          color: dataUtils.getHeatmapCellColor(project.color, intensity)\n        };\n      });\n    });\n    \n    return data;\n  }, [projects, tasks, events, dateRange]);\n\n  // Handle project order changes - Implements D8\n  const handleMoveProject = async (projectId, direction) => {\n    const project = projects.find(p => p.id === projectId);\n    if (!project) return;\n\n    const currentOrder = project.order;\n    const newOrder = direction === 'up' ? currentOrder - 1 : currentOrder + 1;\n    \n    // Find the project to swap with\n    const targetProject = projects.find(p => p.order === newOrder);\n    if (!targetProject) return;\n\n    // Swap orders\n    await onProjectUpdate(projectId, { order: newOrder });\n    await onProjectUpdate(targetProject.id, { order: currentOrder });\n  };\n\n  // Handle project visibility toggle - Implements D7\n  const handleToggleHidden = async (projectId) => {\n    const project = projects.find(p => p.id === projectId);\n    if (project) {\n      // If we're trying to show a hidden project, check the 6-project limit\n      if (project.hidden) {\n        const visibleProjects = projects.filter(p => !p.hidden);\n        if (visibleProjects.length >= 6) {\n          // Don't show the project and display an error message\n          alert('You can only have 6 visible projects at a time. Please hide another project first.');\n          return;\n        }\n      }\n      \n      await onProjectUpdate(projectId, { hidden: !project.hidden });\n    }\n  };\n\n  // Navigate calendar - Implements D4\n  const navigateCalendar = (direction) => {\n    const newDate = new Date(currentDate);\n    const days = direction === 'left' ? -timeScale * 7 : timeScale * 7;\n    newDate.setDate(newDate.getDate() + days);\n    onCurrentDateChange(newDate);\n  };\n\n  // Handle context menu\n  const handleCellContextMenu = (e, project, date) => {\n    e.preventDefault();\n    const cellEvents = heatmapData[project.id]?.[date.toISOString()]?.events || [];\n    \n    setContextMenu({\n      x: e.clientX,\n      y: e.clientY,\n      project,\n      date,\n      events: cellEvents\n    });\n  };\n\n  // Handle context menu clicks outside to close\n  useEffect(() => {\n    if (contextMenu) {\n      const handleClickOutside = () => setContextMenu(null);\n      document.addEventListener('click', handleClickOutside);\n      return () => document.removeEventListener('click', handleClickOutside);\n    }\n  }, [contextMenu]);\n\n  // Handle New Event button click with positioning\n  const handleNewEvent = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    \n    if (newEventButtonRef.current) {\n      const buttonRect = newEventButtonRef.current.getBoundingClientRect();\n      const cardWidth = 400; // Card width from CSS\n      const cardHeight = 600; // Estimated max height\n      const margin = 10; // Margin from edges\n      \n      // Calculate initial position (to the left of the button)\n      let x = buttonRect.left - cardWidth - margin;\n      let y = buttonRect.top;\n      \n      // Check if card would go off the left edge of the screen\n      if (x < margin) {\n        // If so, position it to the right of the button instead\n        x = buttonRect.right + margin;\n      }\n      \n      // Check if card would go off the right edge of the screen\n      if (x + cardWidth > window.innerWidth - margin) {\n        // Position it centered under the button as fallback\n        x = buttonRect.left + (buttonRect.width / 2) - (cardWidth / 2);\n        y = buttonRect.bottom + margin;\n      }\n      \n      // Ensure it doesn't go off the left edge (final check)\n      if (x < margin) {\n        x = margin;\n      }\n      \n      // Ensure it doesn't go off the right edge (final check)\n      if (x + cardWidth > window.innerWidth - margin) {\n        x = window.innerWidth - cardWidth - margin;\n      }\n      \n      // Check if card would go off the bottom of the screen\n      if (y + cardHeight > window.innerHeight - margin) {\n        // Position it above the button instead\n        y = buttonRect.top - cardHeight - margin;\n      }\n      \n      // Ensure it doesn't go off the top edge\n      if (y < margin) {\n        y = margin;\n      }\n      \n      setEventCardPosition({ x, y });\n      setShowEventCard(true);\n    }\n  };\n\n  // Handle event card close\n  const handleEventCardClose = () => {\n    setShowEventCard(false);\n  };\n\n  // Handle event card save\n  const handleEventCardSave = (eventData) => {\n    onNewEvent(eventData);\n    setShowEventCard(false);\n  };\n\n  // Get month headers - Implements D1.2\n  const getMonthHeaders = () => {\n    const potentialHeaders = [];\n    \n    dateRange.forEach((date, index) => {\n      // For each cell, check if the 1st of any month falls within its timeScale period\n      const cellStartDate = new Date(date);\n      const cellEndDate = new Date(date);\n      cellEndDate.setDate(cellStartDate.getDate() + timeScale - 1);\n      \n      // Check if the 1st of any month falls within this cell's date range\n      let monthStartInCell = null;\n      \n      // Check each day within the cell's timeScale period\n      for (let dayOffset = 0; dayOffset < timeScale; dayOffset++) {\n        const checkDate = new Date(cellStartDate);\n        checkDate.setDate(cellStartDate.getDate() + dayOffset);\n        \n        if (checkDate.getDate() === 1) {\n          monthStartInCell = checkDate;\n          break;\n        }\n      }\n      \n      // If we found a month start within this cell, add to potential headers\n      if (monthStartInCell) {\n        const monthYear = `${monthStartInCell.getFullYear()}-${monthStartInCell.getMonth()}`;\n        \n        // Make sure we haven't already added this month\n        if (!potentialHeaders.some(h => h.monthYear === monthYear)) {\n          const monthName = monthStartInCell.toLocaleDateString('en-US', { month: 'short' });\n          \n          potentialHeaders.push({\n            month: monthName,\n            monthYear: monthYear,\n            position: index + 1, // +1 to account for project column\n            year: monthStartInCell.getFullYear(),\n            date: new Date(monthStartInCell),\n            isJanuary: monthName === 'Jan'\n          });\n        }\n      }\n      \n      // Special case: if this is the first cell and no month header was added yet,\n      // add the current month to avoid empty headers\n      if (index === 0 && potentialHeaders.length === 0) {\n        const monthName = date.toLocaleDateString('en-US', { month: 'short' });\n        const monthYear = `${date.getFullYear()}-${date.getMonth()}`;\n        \n        potentialHeaders.push({\n          month: monthName,\n          monthYear: monthYear,\n          position: index + 1,\n          year: date.getFullYear(),\n          date: new Date(date),\n          isJanuary: monthName === 'Jan'\n        });\n      }\n    });\n    \n    // Different filtering logic based on timeScale\n    if (timeScale > 10) {\n      // For large timescales, show most recent month and then every 3-4 cells\n      const filteredHeaders = [];\n      \n      // Sort by date (most recent first)\n      const sortedHeaders = potentialHeaders.sort((a, b) => b.date - a.date);\n      \n      if (sortedHeaders.length > 0) {\n        // Always include the most recent month\n        const mostRecent = sortedHeaders[0];\n        filteredHeaders.push(mostRecent);\n        \n        // Then add months that are approximately 3-4 cells away\n        const targetSpacing = 3.5; // Average of 3 and 4\n        let lastIncludedPosition = mostRecent.position;\n        \n        // Sort remaining headers by position for consistent spacing\n        const remainingHeaders = sortedHeaders.slice(1).sort((a, b) => a.position - b.position);\n        \n        for (const header of remainingHeaders) {\n          const distance = Math.abs(header.position - lastIncludedPosition);\n          \n          // Include if it's far enough from the last included header\n          if (distance >= Math.floor(targetSpacing)) {\n            filteredHeaders.push(header);\n            lastIncludedPosition = header.position;\n          }\n        }\n      }\n      \n      return filteredHeaders.sort((a, b) => a.position - b.position);\n    } else {\n      // Original logic for smaller timescales\n      const filteredHeaders = [];\n      \n      // Sort by position (chronological order)\n      const sortedHeaders = potentialHeaders.sort((a, b) => a.position - b.position);\n      \n      for (let i = 0; i < sortedHeaders.length; i++) {\n        const currentHeader = sortedHeaders[i];\n        let shouldInclude = true;\n        \n        // Check if this header is too close to any already included header\n        for (const includedHeader of filteredHeaders) {\n          const distance = Math.abs(currentHeader.position - includedHeader.position);\n          \n          if (distance < 3) {\n            // Too close - prioritize the more recent one\n            if (currentHeader.date > includedHeader.date) {\n              // Remove the older header and include the current one\n              const indexToRemove = filteredHeaders.findIndex(h => h.monthYear === includedHeader.monthYear);\n              filteredHeaders.splice(indexToRemove, 1);\n            } else {\n              // Keep the existing newer header, skip current one\n              shouldInclude = false;\n              break;\n            }\n          }\n        }\n        \n        if (shouldInclude) {\n          filteredHeaders.push(currentHeader);\n        }\n      }\n      \n      return filteredHeaders;\n    }\n  };\n\n  const monthHeaders = getMonthHeaders();\n\n  return (\n    <div className=\"heatmap-calendar\" ref={calendarRef}>\n      {/* Header with controls - Implements R15, D1.3 */}\n      <div className=\"heatmap-header\">\n        <div className=\"heatmap-controls\">\n          <button \n            className=\"btn btn-ghost\"\n            onClick={() => navigateCalendar('left')}\n            title=\"Previous week\"\n          >\n            <ChevronLeft size={16} />\n          </button>\n          \n          <button \n            className=\"btn btn-ghost\"\n            onClick={() => onCurrentDateChange(new Date())}\n            title=\"Go to today\"\n          >\n            Today\n          </button>\n          \n          <button \n            className=\"btn btn-ghost\"\n            onClick={() => navigateCalendar('right')}\n            title=\"Next week\"\n          >\n            <ChevronRight size={16} />\n          </button>\n        </div>\n\n        <div className=\"timescale-control\">\n          <label className=\"form-label\">Days per Cell:</label>\n          <div className=\"timescale-buttons\">\n            <button\n              className={`timescale-btn ${timeScale === 1 && !isCustomTimeScale ? 'active' : ''}`}\n              onClick={() => {\n                setIsCustomTimeScale(false);\n                onTimeScaleChange(1);\n              }}\n            >\n              1 day\n            </button>\n            <button\n              className={`timescale-btn ${timeScale === 3 && !isCustomTimeScale ? 'active' : ''}`}\n              onClick={() => {\n                setIsCustomTimeScale(false);\n                onTimeScaleChange(3);\n              }}\n            >\n              3 day\n            </button>\n            <button\n              className={`timescale-btn ${timeScale === 7 && !isCustomTimeScale ? 'active' : ''}`}\n              onClick={() => {\n                setIsCustomTimeScale(false);\n                onTimeScaleChange(7);\n              }}\n            >\n              week\n            </button>\n            <button\n              className={`timescale-btn ${isCustomTimeScale ? 'active' : ''}`}\n              onClick={() => setIsCustomTimeScale(true)}\n            >\n              Custom\n            </button>\n            {isCustomTimeScale && (\n              <input\n                type=\"number\"\n                min=\"1\"\n                max=\"30\"\n                value={timeScale}\n                onChange={(e) => onTimeScaleChange(parseInt(e.target.value) || 1)}\n                className=\"input custom-timescale-input\"\n              />\n            )}\n          </div>\n        </div>\n      </div>\n\n      {/* Calendar grid */}\n      <div className=\"heatmap-grid\">\n        {/* Month headers - Implements D1.2 */}\n        <div className=\"month-headers\" style={{ gridTemplateColumns }}>\n          <div className=\"project-column-header\"></div>\n          {dateRange.map((date, index) => {\n            const monthHeader = monthHeaders.find(h => h.position === index + 1);\n            return (\n              <div key={index} className={`month-header ${monthHeader?.isJanuary ? 'january-header' : ''}`}>\n                {monthHeader && (\n                  <>\n                    {monthHeader.isJanuary && (\n                      <div className=\"month-year\">{monthHeader.year}</div>\n                    )}\n                    <div className=\"month-name\">{monthHeader.month}</div>\n                  </>\n                )}\n              </div>\n            );\n          })}\n        </div>\n\n        {/* Date headers */}\n        <div className=\"date-headers\" style={{ gridTemplateColumns }}>\n          <div className=\"project-column-header\">Projects</div>\n          {dateRange.map((date, index) => {\n            const today = new Date();\n            const isPastDate = date < today && date.toDateString() !== today.toDateString();\n            \n            // Get weekday initial (M, T, W, T, F, S, SS)\n            const dayOfWeek = date.getDay(); // 0 = Sunday, 1 = Monday, etc.\n            const weekdayInitials = ['SS', 'M', 'T', 'W', 'T', 'F', 'S'];\n            const weekdayInitial = weekdayInitials[dayOfWeek];\n            \n            return (\n              <div key={index} className={`date-header ${isPastDate ? 'past-date' : ''}`}>\n                <span className=\"date-day\">{date.getDate()}</span>\n                <span className=\"date-weekday\">\n                  {weekdayInitial}\n                </span>\n              </div>\n            );\n          })}\n        </div>\n\n        {/* Project rows - Implements D1.1, D3, D7, D8 */}\n        {visibleProjects.map((project) => (\n          <ProjectRow\n            key={project.id}\n            project={project}\n            dateRange={dateRange}\n            heatmapData={heatmapData[project.id] || {}}\n            gridTemplateColumns={gridTemplateColumns}\n            onMoveUp={() => handleMoveProject(project.id, 'up')}\n            onMoveDown={() => handleMoveProject(project.id, 'down')}\n            onToggleHidden={() => handleToggleHidden(project.id)}\n            onEdit={() => onProjectEdit(project)}\n            onDelete={() => onProjectDelete(project.id)}\n            onCellContextMenu={handleCellContextMenu}\n            onCellHover={setHoveredCell}\n            onEventEdit={onEventEdit}\n            events={dataUtils.getProjectEvents(events, project.id)}\n            showEventTitles={showEventTitles}\n          />\n        ))}\n\n        {/* Hidden projects bar - Implements D7 */}\n        {hiddenProjects.length > 0 && (\n          <div className=\"hidden-projects-bar\">\n            <span className=\"text-muted\">Hidden projects:</span>\n            {hiddenProjects.map(project => (\n              <button\n                key={project.id}\n                className=\"btn btn-ghost btn-sm\"\n                onClick={() => handleToggleHidden(project.id)}\n                style={{ color: project.color }}\n              >\n                {project.name}\n              </button>\n            ))}\n          </div>\n        )}\n\n        {/* Action buttons */}\n        <div className=\"heatmap-action-buttons\">\n          <button \n            className=\"btn btn-primary btn-project\"\n            onClick={onNewProject}\n          >\n            + New Project\n          </button>\n          <button \n            className=\"btn btn-secondary btn-event\"\n            ref={newEventButtonRef}\n            onClick={handleNewEvent}\n          >\n            + New Event\n          </button>\n        </div>\n      </div>\n\n      {/* Context menu for cells */}\n      {contextMenu && (\n        <ContextMenu\n          contextMenu={contextMenu}\n          onEventEdit={onEventEdit}\n          onEventDelete={onEventDelete}\n          onClose={() => setContextMenu(null)}\n        />\n      )}\n\n      {/* Tooltip for hovered cell */}\n      {hoveredCell && (\n        <CellTooltip hoveredCell={hoveredCell} />\n      )}\n\n      {/* Event card */}\n      {showEventCard && (\n        <EventCard\n          event={null}\n          projects={projects}\n          onSave={handleEventCardSave}\n          onClose={handleEventCardClose}\n          position={eventCardPosition}\n        />\n      )}\n    </div>\n  );\n};\n\n// Project row component - Implements D3, D8\nconst ProjectRow = ({\n  project,\n  dateRange,\n  heatmapData,\n  gridTemplateColumns,\n  onMoveUp,\n  onMoveDown,\n  onToggleHidden,\n  onEdit,\n  onDelete,\n  onCellContextMenu,\n  onCellHover,\n  onEventEdit,\n  events,\n  showEventTitles\n}) => {\n\n  return (\n    <>\n      <div className=\"project-row\" style={{ gridTemplateColumns }}>\n        {/* Project header */}\n        <div \n          className=\"project-header\"\n          style={{ '--project-pill-color': project.color }}\n        >\n          {/* Project info */}\n          <div className=\"project-info\">\n            <div className=\"project-main-info\">\n              <span className=\"project-name\" title={project.name}>{project.name}</span>\n              {events.length > 0 && (\n                <span className=\"project-events-count text-muted\">\n                  {events.length} event{events.length !== 1 ? 's' : ''}\n                </span>\n              )}\n            </div>\n          </div>\n\n          {/* Move and hide buttons - appear on hover on the right */}\n          <div className=\"project-actions-right\">\n            <div className=\"move-buttons-stack\">\n              <button \n                className=\"btn-ghost btn-sm move-up\"\n                onClick={(e) => {\n                  e.stopPropagation();\n                  onMoveUp();\n                }}\n                title=\"Move up\"\n              >\n                <ChevronUp size={12} />\n              </button>\n              <button \n                className=\"btn-ghost btn-sm move-down\"\n                onClick={(e) => {\n                  e.stopPropagation();\n                  onMoveDown();\n                }}\n                title=\"Move down\"\n              >\n                <ChevronDown size={12} />\n              </button>\n            </div>\n            <button\n              className=\"btn-ghost btn-sm\"\n              onClick={(e) => {\n                e.stopPropagation();\n                onToggleHidden();\n              }}\n              title=\"Hide project\"\n            >\n              <X size={14} />\n            </button>\n          </div>\n        </div>\n\n        {/* Heatmap cells - Implements D2, D3 */}\n        {dateRange.map((date, dateIndex) => {\n          const cellData = heatmapData[date.toISOString()] || {\n            completedTasks: 0,\n            intensity: 0,\n            events: [],\n            color: 'transparent'\n          };\n\n          const hasDeadline = cellData.events.some(e => e.type === 'deadline');\n          const hasMilestone = cellData.events.some(e => e.type === 'milestone');\n          const today = new Date();\n          const isPastDate = date < today && date.toDateString() !== today.toDateString();\n\n          return (\n            <div\n              key={dateIndex}\n              className={`heatmap-cell ${hasDeadline ? 'has-deadline' : ''} ${hasMilestone ? 'has-milestone' : ''} ${isPastDate ? 'past-date' : ''}`}\n              onContextMenu={(e) => onCellContextMenu(e, project, date)}\n              onMouseEnter={() => onCellHover({\n                project,\n                date,\n                data: cellData\n              })}\n              onMouseLeave={() => onCellHover(null)}\n              title={`${project.name} - ${dataUtils.formatDate(date)}: ${cellData.completedTasks} tasks completed`}\n            >\n              {/* Rounded square indicator for heatmap intensity */}\n              <div \n                className=\"heatmap-square\"\n                style={{ \n                  backgroundColor: cellData.intensity > 0 ? project.color : 'var(--border)',\n                  border: cellData.intensity === 0 ? `1px solid ${project.color}15` : 'none',\n                  opacity: (() => {\n                    let baseOpacity;\n                    if (cellData.intensity === 0) {\n                      baseOpacity = 0.4; // Subtle grey for 0 tasks\n                    } else {\n                      // Scale from 0.3 to 1.0 based on tasks (max at 10+ tasks)\n                      const normalizedIntensity = Math.min(cellData.completedTasks / 10, 1);\n                      baseOpacity = 0.3 + (normalizedIntensity * 0.7);\n                    }\n                    // Reduce opacity for past dates\n                    return isPastDate ? baseOpacity * 0.7 : baseOpacity;\n                  })()\n                }}\n              />\n              \n              {/* Event names directly under the heatmap square */}\n              {cellData.events.length > 0 && showEventTitles && (\n                <div className=\"cell-event-names\">\n                  {cellData.events.map(event => (\n                    <div\n                      key={event.id}\n                      className={`event-name ${event.type}`}\n                      onClick={(e) => {\n                        e.stopPropagation();\n                        onEventEdit(event);\n                      }}\n                    >\n                      {event.name}\n                    </div>\n                  ))}\n                </div>\n              )}\n            </div>\n          );\n        })}\n      </div>\n    </>\n  );\n};\n\n// Context menu component\nconst ContextMenu = ({ contextMenu, onEventEdit, onEventDelete, onClose }) => {\n  const { x, y, project, date, events } = contextMenu;\n\n  return (\n    <div\n      className=\"context-menu\"\n      style={{ \n        position: 'fixed', \n        left: x, \n        top: y,\n        zIndex: 1000\n      }}\n    >\n      <div className=\"context-menu-header\">\n        <strong>{project.name}</strong>\n        <br />\n        <span className=\"text-muted\">{dataUtils.formatDate(date, 'long')}</span>\n      </div>\n      \n      {events.length > 0 && (\n        <div className=\"context-menu-section\">\n          <div className=\"context-menu-label\">Events:</div>\n          {events.map(event => (\n            <div key={event.id} className=\"context-menu-item\">\n              <span className={`event-type-badge ${event.type}`}>\n                {event.type}\n              </span>\n              <span>{event.name}</span>\n              <div className=\"event-actions\">\n                <button\n                  className=\"btn-ghost btn-sm\"\n                  onClick={() => {\n                    onEventEdit(event);\n                    onClose();\n                  }}\n                >\n                  Edit\n                </button>\n                <button\n                  className=\"btn-ghost btn-sm\"\n                  onClick={() => {\n                    onEventDelete(event.id);\n                    onClose();\n                  }}\n                >\n                  Delete\n                </button>\n              </div>\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\n// Cell tooltip component\nconst CellTooltip = ({ hoveredCell }) => {\n  const { project, date, data } = hoveredCell;\n\n  return (\n    <div className=\"cell-tooltip\">\n      <div className=\"tooltip-header\">\n        <strong style={{ color: project.color }}>{project.name}</strong>\n        <span className=\"text-muted\">{dataUtils.formatDate(date, 'long')}</span>\n      </div>\n      <div className=\"tooltip-content\">\n        <div>Tasks completed: {data.completedTasks}</div>\n        {data.events.length > 0 && (\n          <div>\n            Events: {data.events.map(e => e.name).join(', ')}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default HeatmapCalendar; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}